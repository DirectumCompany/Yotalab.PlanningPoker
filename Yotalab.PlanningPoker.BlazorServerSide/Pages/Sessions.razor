@page "/"

@inherits AuthorizedOwningComponentBase<SessionService>
@inject NavigationManager NavigationManager

<h1 class="text-center">Мои сессии</h1>

@if (this.sessions != null)
{
  <div class="w-75 m-auto">
    <div>
      <div class="list-group">
        @if (this.sessions.Count > 0)
        {
          foreach (var session in this.sessions)
          {
            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
              <div class="flex-fill"
                   style="cursor:pointer"
                   @onclick="@(() => NavigationManager.NavigateTo($"sessions/{session.Id}"))">
                @session.Name
                @if (session.ProcessingState == Grains.Interfaces.Models.SessionProcessingState.Started)
                {
                  <span class="badge bg-danger ms-2">Голосование идет</span>
                }
              </div>
              <div>
                @if (session.ModeratorIds.Contains(this.ParticipantId))
                {
                  <span class="badge bg-primary me-2">Вы модератор</span>
                }
                <span class="badge bg-success">участников: @session.ParticipantsCount</span>
              </div>
              <div class="ms-2">
                @if (session.ModeratorIds.Contains(this.ParticipantId))
                {
                  var sessionContextMenuItems = new List<DropDownMenuItem>();
                  sessionContextMenuItems.Add(new DropDownMenuItem()
                  {
                    ItemTemplate =
                @<button class="dropdown-item" @onclick="@(() => this.RemoveSessionAsync(session.Id))">
                  <span class="oi oi-x text-danger me-2"></span>Удалить
                </button>
                  });

                  <DropDownMenu Items="sessionContextMenuItems">
                    <ButtonTemplate>
                      <button class="btn btn-sm p-0 m-0 ps-1 pe-1">
                        <span class="oi oi-ellipses"></span>
                      </button>
                    </ButtonTemplate>
                  </DropDownMenu>
                }
              </div>
            </div>
          }
        }
        else
        {
          <div class="list-group-item list-group-item-action">
            <strong>Сессий нет</strong>
          </div>
        }
      </div>
    </div>

    <div class="float-end p-4 pe-3">
      <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#newSessionModal" @onclick="this.OnShowCreationModal">Новая сессия</button>
    </div>
  </div>

  <EditSessionModal Id="newSessionModal" Title="Новая сессия" EditArgs="this.newSessionArgs" OnConfirm="@this.CreateSessionAsync" />
}
else
{
  <div class="d-flex justify-content-center">
    <div class="spinner-grow text-info" role="status">
      <span class="visually-hidden">Загрузка...</span>
    </div>
  </div>
}