@using Yotalab.PlanningPoker.Grains.Interfaces.Models

@inject NavigationManager NavigationManager
@inject ParticipantsService Service

<MudAlert Severity="Severity.Normal" Class="mt-4 mud-alert-width-100" NoIcon="true">
  <div class="d-flex align-items-center">
    <MudText Class="mr-2" Align="Align.Center"><strong>@this.title</strong></MudText>
    <MudSpacer />
    @if (this.sessionExists)
    {
      <MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Small" Style="text-transform:none"
                 OnClick="@(async () => await this.Service.JoinAsync(this.Session.Id, this.ParticipantId))">
        <MudText>Присоединиться</MudText>
      </MudButton>
    }
    else
    {
      <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" Style="text-transform:none"
                 OnClick="@(() => this.NavigationManager.NavigateTo("/"))">
        <MudText>Вернуться к моим сессиям</MudText>
      </MudButton>
    }
  </div>
</MudAlert>

@code {
  private string title;
  private bool sessionExists;

  [Parameter]
  public SessionInfo Session { get; set; }

  [Parameter]
  public Guid ParticipantId { get; set; }

  protected override async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync();
    this.sessionExists = this.Session != null && this.Session.IsInitialized;
    this.title = this.sessionExists ?
      $"Вы не являетесь участником сессии '{this.Session.Name}'" :
      "Сессии не существует";
  }
}
