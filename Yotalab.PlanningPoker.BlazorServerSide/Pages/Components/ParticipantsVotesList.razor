@using Grains.Interfaces.Models
@using Yotalab.PlanningPoker.BlazorServerSide.Services.DTO

<MudPaper>
  <MudList Dense="true" Style="padding-top: 0;padding-bottom: 0;">
    <MudListSubheader Class="ml-n2 mb-n4">
      <b><span class="text-muted me-2">Участники (@this.PaticipantVotes.Count())</span></b>
    </MudListSubheader>
    @foreach (var participant in this.PaticipantVotes.OrderByDescending(p => p.Id == this.ParticipantId))
    {
      <MudListItem>
        <div class="d-flex align-items-center justify-content-between">
          <div class="d-flex align-items-center">
            <div class="me-3">
              <ParticipantAvatar Participant="participant" ParticipantId="this.ParticipantId" />
            </div>
            <div>
              <div class="d-flex align-items-center">
                <h6 class="my-0 me-2">@(string.IsNullOrEmpty(participant.Name) ? "Безымянный" : participant.Name)</h6>
                @if (this.Session.ModeratorIds.Contains(participant.Id))
                {
                  <MudIcon Icon="@Icons.Material.Filled.LocalPolice" Color="Color.Warning"/>
                }
              </div>
              @if (participant.Id == this.ParticipantId)
              {
                <ParticipantChangeNameLink ParticipantInfo="@participant.ToInfo()"
                                           Title="Изменить имя"
                                           ClassNames="p-0 m-0">
                  <TitleTemplate>
                    <small>@context</small>
                  </TitleTemplate>
                </ParticipantChangeNameLink>
              }
            </div>
          </div>
          @if (participant.Id == this.ParticipantId || this.Session.ProcessingState == SessionProcessingState.Stopped || this.Session.ProcessingState == SessionProcessingState.Finished)
          {
            <h4 class="text-muted"><strong>@participant.Vote.Value</strong></h4>
          }
          else
          {
            <h4>@(!Vote.Unset.Equals(participant.Vote) ? "👌" : string.Empty)</h4>
          }
        </div>
      </MudListItem>
    }
  </MudList>
</MudPaper>

@code {
  [Parameter]
  public IEnumerable<ParticipantInfoDTO> PaticipantVotes { get; set; }

  [Parameter]
  public Guid ParticipantId { get; set; }

  [CascadingParameter]
  public SessionInfo Session { get; set; }

  @inject ParticipantsService Service
  @inject SessionService SessionService
}
