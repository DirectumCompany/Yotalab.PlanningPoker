// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Yotalab.PlanningPoker.BlazorServerSide.Pages.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Yotalab.PlanningPoker.BlazorServerSide;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Yotalab.PlanningPoker.BlazorServerSide.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Yotalab.PlanningPoker.BlazorServerSide.Pages.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Yotalab.PlanningPoker.BlazorServerSide.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\Pages\Components\SessionStatusPrompt.razor"
using Grains.Interfaces.Models;

#line default
#line hidden
#nullable disable
    public partial class SessionStatusPrompt : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 17 "C:\Users\hanki\source\repos\Github.Yotalab.PlanningPoker\Yotalab.PlanningPoker.BlazorServerSide\Pages\Components\SessionStatusPrompt.razor"
       
  [Parameter]
  public Guid SessionId { get; set; }

  [Parameter]
  public Guid ModeratorId { get; set; }

  [Parameter]
  public Guid ParticipantId { get; set; }

  [Parameter]
  public SessionProcessingState SessionState { get; set; }

  private string buttonText;
  private string buttonStyle;
  private string sessionStatus;
  private SessionProcessingState requestedState;
  private string alertClass;
  private bool isSessionStateChanging = false;

  protected override void OnParametersSet()
  {
    base.OnParametersSet();

    this.buttonText = "Начать";
    this.buttonStyle = "btn-primary";
    this.sessionStatus = "Голосование не проводится";
    this.requestedState = SessionProcessingState.Started;
    this.alertClass = "alert-secondary";

    if (this.SessionState == SessionProcessingState.Started)
    {
      this.buttonText = "Остановить";
      this.buttonStyle = "btn-warning";
      this.sessionStatus = "Голосование началось...";
      this.requestedState = SessionProcessingState.Stopped;
      this.alertClass = "alert-primary";
    }
    else if (this.SessionState == SessionProcessingState.Stopped)
    {
      this.buttonText = "Завершить";
      this.buttonStyle = "btn-success";
      this.sessionStatus = "Голосование остановлено";
      this.requestedState = SessionProcessingState.Finished;
      this.alertClass = "alert-warning";
    }
    else if (this.SessionState == SessionProcessingState.Finished)
    {
      this.buttonText = "Обнулить";
      this.buttonStyle = "btn-secondary";
      this.sessionStatus = "Голосование завершилось";
      this.requestedState = SessionProcessingState.Initial;
      this.alertClass = "alert-success";
    }
  }

  private async Task ChangeSessionState(SessionProcessingState requestedState)
  {
    try
    {
      this.isSessionStateChanging = true;
      if (requestedState == SessionProcessingState.Initial)
        await this.Service.ResetAsync(this.SessionId, this.ParticipantId);
      else if (requestedState == SessionProcessingState.Started)
        await this.Service.StartAsync(this.SessionId, this.ParticipantId);
      else if (requestedState == SessionProcessingState.Stopped)
        await this.Service.StopAsync(this.SessionId, this.ParticipantId);
      else if (requestedState == SessionProcessingState.Finished)
        await this.Service.FinishAsync(this.SessionId, this.ParticipantId);

      // Небольшая задержка, иначе можно успеть быстро клянуть 2 раза и перескочить через состояние.
      await Task.Delay(100);
    }
    finally
    {
      this.isSessionStateChanging = false;
    }
  }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SessionService Service { get; set; }
    }
}
#pragma warning restore 1591
